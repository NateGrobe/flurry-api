{"version":3,"sources":["services/deckServices.js","services/cardServices.js","reducers/deckReducer.js","reducers/newCardReducer.js","store.js","components/CardDisplayModal.js","components/UserCard.js","components/NewCardModal.js","components/Deck.js","components/Decks.js","App.js","index.js"],"names":["a","axios","get","res","data","getAll","obj","post","cardId","delete","createCard","removeCard","deckReducer","state","action","type","content","deckId","changedDeck","find","d","id","cards","push","newCard","map","deck","filter","card","initialState","title","description","tasks","newCardReducer","desc","reducer","combineReducers","decks","store","createStore","composeWithDevTools","applyMiddleware","thunk","mapDispatchToProps","removeCardFromDeck","dispatch","cardServices","connect","cardData","props","useState","modifyDesc","setModifyDesc","show","hide","submitModification","Modal","onHide","onSubmit","Header","closeButton","Body","onClick","value","Footer","Button","variant","UserCard","showCardDisplay","setShowCardDisplay","Card","Text","updateTitle","updateDescription","clearCardForm","addCardToDeck","hideModal","event","preventDefault","Title","placeholder","onChange","target","style","width","height","Deck","header","cbIsHovered","setCbIsHovered","showNewCardModal","setShowNewCardModal","addCardButtonStyles","color","textAlign","border","backgroundColor","fontWeight","fontSize","key","onMouseEnter","onMouseLeave","CardDeck","as","initializeDecks","deckServices","useEffect","Container","fluid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7f77c15.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = 'api/decks';\n\nasync function getAll() {\n  const res = await axios.get(baseUrl);\n  return res.data;\n}\n\nexport default {\n  getAll,\n};\n","import axios from 'axios';\nconst baseUrl = '/api/cards';\n\nasync function getAll() {\n  const res = await axios.get(baseUrl);\n  return res.data;\n}\n\nasync function createCard(obj) {\n  const res = await axios.post(baseUrl, obj);\n  return res.data;\n}\n\nasync function removeCard(cardId) {\n  return await axios.delete(`${baseUrl}/${cardId}`);\n}\n\nexport default { getAll, createCard, removeCard };\n","import deckServices from '../services/deckServices';\nimport cardServices from '../services/cardServices';\n\nconst deckReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'INIT_DECKS':\n      return action.content;\n    case 'ADD_CARD_TO_DECK': {\n      const deckId = action.deckId;\n      const changedDeck = state.find(d => d.id === deckId);\n      changedDeck.cards.push(action.newCard);\n      return state.map(deck => deck.id ===  deckId ? changedDeck : deck);\n    }\n    case 'REMOVE_CARD_FROM_DECK': {\n      const { cardId, deckId } = action;\n      const changedDeck = state.find(d => d.id === deckId);\n      changedDeck.cards = changedDeck.cards.filter(card => card.id !== cardId);\n      return state.map(deck => deck.id ===  deckId ? changedDeck : deck);\n    }\n    default:\n      return state;\n  }\n};\n\nexport function initializeDecks() {\n  return async dispatch => {\n    const content = await deckServices.getAll();\n    dispatch({\n      type: 'INIT_DECKS',\n      content\n    });\n  };\n}\n\nexport function addCardToDeck(card, deckId) {\n  return async dispatch => {\n    const newCard = await cardServices.createCard(card);\n    dispatch({\n      type: 'ADD_CARD_TO_DECK',\n      newCard,\n      deckId\n    });\n  };\n}\n\nexport function removeCardFromDeck(cardId, deckId) {\n  return async dispatch => {\n    await cardServices.removeCard(cardId);\n    dispatch({\n      type: 'REMOVE_CARD_FROM_DECK',\n      cardId,\n      deckId\n    });\n  };\n}\n\nexport default deckReducer;\n","const initialState = {\n  title: '',\n  description: '',\n  tasks: []\n};\n\nconst newCardReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'CARD_TITLE':\n      return { ...state, title: action.title };\n    case 'CARD_DESC':\n      return { ...state, description: action.desc };\n      // need a to add a solution for managing tasks\n    case 'CLEAR_CARD_FORM':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport function updateTitle(title) {\n  return dispatch => {\n    dispatch({\n      type: 'CARD_TITLE',\n      title\n    });\n  };\n}\n\n\nexport function updateDescription(desc) {\n  return dispatch => {\n    dispatch({\n      type: 'CARD_DESC',\n      desc\n    });\n  };\n}\n\nexport function clearCardForm() {\n  return dispatch => {\n    dispatch({\n      type: 'CLEAR_CARD_FORM'\n    });\n  };\n}\n\nexport default newCardReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport deckReducer from './reducers/deckReducer';\nimport newCardReducer from './reducers/newCardReducer';\n\nconst reducer = combineReducers({\n  decks: deckReducer,\n  newCard: newCardReducer\n});\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;\n","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\n\nimport { removeCardFromDeck, updateCard } from '../reducers/deckReducer';\n\n//import { modTitle, modDesc } from '../reducers/cardModReducer'\n\nconst CardDisplayModal = (props) => {\n  const [modifyTitle, setModifyTitle] = useState(false);\n  const [modifyDesc, setModifyDesc] = useState(false);\n\n  const { show, hide, data } = props;\n  const { title, description, tasks } = props.cardData;\n\n  function deleteCard() {\n    props.removeCardFromDeck(data.cardId, data.deckId);\n    hide();\n  }\n\n  function setInitialState() {\n    //props.clearCardForm();\n    //props.updateTitle(data.title);\n    //props.updateDescription(data.description);\n  }\n\n  function modifyDescription() {\n    setInitialState();\n    setModifyDesc(true);\n  }\n\n  function submitModification() {\n  }\n\n  return (\n    <Modal show={show} onHide={hide}>\n      <form onSubmit={submitModification}>\n        <Modal.Header closeButton>\n          {data.title}\n        </Modal.Header>\n        <Modal.Body>\n          <div onClick={modifyDescription}>\n            {modifyDesc\n              ? <input\n                value={description}\n                //onChange={({ target }) => props.updateDescription(target.value)}\n              />\n              : data.description\n            }\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='secondary' onClick={hide}>\n          Close\n          </Button>\n          <Button variant='danger' onClick={deleteCard}>Remove</Button>\n          <Button variant='primary' onClick={submitModification}>\n            Change\n          </Button>\n        </Modal.Footer>\n      </form>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    cardData: state.newCard\n  };\n}\n\nconst mapDispatchToProps = {\n  removeCardFromDeck,\n};\n\nexport default connect (\n  mapStateToProps,\n  mapDispatchToProps\n)(CardDisplayModal);\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardDisplayModal from './CardDisplayModal';\nimport './styles.css';\n\nconst UserCard = ({ title, description, cardId, deckId }) => {\n  const [showCardDisplay, setShowCardDisplay] = useState(false);\n\n  const handleCardShow = () => setShowCardDisplay(true);\n  const handleCardHide = () => setShowCardDisplay(false);\n\n  return (\n    <div>\n      <Card\n        id='userCard'\n        onClick={handleCardShow}\n      >\n        <Card.Body>\n          <Card.Text>\n            <strong>{title}</strong>\n          </Card.Text>\n          <Card.Text>\n            {description}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n      <br/>\n      <CardDisplayModal\n        show={showCardDisplay}\n        hide={handleCardHide}\n        data={{\n          title,\n          description,\n          cardId,\n          deckId\n        }}\n      />\n    </div>\n  );\n};\n\nexport default UserCard;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nimport {\n  updateTitle,\n  updateDescription,\n  clearCardForm\n} from '../reducers/newCardReducer';\n\nimport { addCardToDeck } from '../reducers/deckReducer';\n\nconst NewCardModal = (props) => {\n\n  const { title, description, tasks } = props.newCard;\n\n  function hideModal() {\n    props.hide();\n    props.clearCardForm();\n  }\n\n  function addCard(event) {\n    event.preventDefault();\n    const newCard = {\n      title,\n      description,\n      tasks: [],\n      deck: props.deckId\n    };\n\n    props.addCardToDeck(newCard, props.deckId);\n    props.clearCardForm();\n    props.hide();\n  }\n\n  return (\n    <Modal show={props.show} onHide={hideModal}>\n      <form onSubmit={addCard}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Card</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <input\n            value={title}\n            placeholder='Enter a title...'\n            onChange={({ target }) => props.updateTitle(target.value)}\n          />\n          <br/>\n          <br/>\n          <textarea\n            value={description}\n            placeholder='Description...'\n            onChange={({ target }) => props.updateDescription(target.value)}\n            style={{ width: '80%', height: '5rem' }}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='secondary' onClick={hideModal}>\n          Close\n          </Button>\n          <Button variant='primary' type='submit'>Add</Button>\n        </Modal.Footer>\n      </form>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    newCard: state.newCard\n  };\n};\n\nconst mapDispatchToProps = {\n  updateTitle,\n  updateDescription,\n  clearCardForm,\n  addCardToDeck\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewCardModal);\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport UserCard from './UserCard';\nimport NewCardModal from './NewCardModal';\n\n// read in deck card info\nconst Deck = ({ header, cards, deckId }) => {\n  const [cbIsHovered, setCbIsHovered] = useState(false);\n  const [showNewCardModal, setShowNewCardModal] = useState(false);\n\n  const addCardButtonStyles = {\n    color: cbIsHovered ? 'black' : 'grey',\n    width: '100%',\n    textAlign: 'left',\n    border: 'none',\n    backgroundColor: cbIsHovered ? 'grey' : '#f1f1f1'\n  };\n\n  const handleModalShow = () => setShowNewCardModal(true);\n  const handleModalClose = () => setShowNewCardModal(false);\n\n\n  if (!cards) {\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      <Card\n        style={{\n          backgroundColor: '#f1f1f1' ,\n          width: '20rem'\n        }}\n      >\n        <Card.Body>\n          <Card.Text\n            style={{\n              fontWeight: 'bold',\n              fontSize: '14pt'\n            }}\n          >\n            {header}\n          </Card.Text>\n\n          {cards.map(card =>\n            <UserCard\n              key={card.id}\n              title={card.title}\n              description={card.description}\n              cardId={card.id}\n              deckId={deckId}\n            />\n          )}\n\n          <Card.Text>\n            <Button\n              variant='light'\n              onClick={handleModalShow}\n              style={ addCardButtonStyles }\n\n              onMouseEnter={() => setCbIsHovered(true)}\n              onMouseLeave={() => setCbIsHovered(false)}\n            >\n              + Add another card\n            </Button>\n          </Card.Text>\n\n        </Card.Body>\n      </Card>\n\n      <NewCardModal show={showNewCardModal} hide={handleModalClose} deckId={deckId}/>\n    </div>\n  );\n};\n\nexport default Deck;\n","import React from 'react';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport { connect } from 'react-redux';\nimport Deck from './Deck';\n\nconst Decks = (props) => {\n\n  return (\n    <CardDeck as='div'>\n      {props.decks.map(deck =>\n        <Deck\n          key={deck.id}\n          cards={deck.cards}\n          header={deck.title}\n          deckId={deck.id}\n        />\n      )}\n    </CardDeck>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    decks: state.decks\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Decks);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Decks from './components/Decks';\n\nimport { initializeDecks } from './reducers/deckReducer';\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeDecks();\n  }, []);\n\n  return (\n    <Container fluid>\n      <Decks />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    decks: state.decks,\n  };\n};\n\nconst mapDispatchToProps = {\n  initializeDecks\n};\n\nexport default connect (\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store.js';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}